"use strict";var e=require("obsidian");class t extends e.PluginSettingTab{constructor(e,t){super(e,t),this.plugin=t}display(){const{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Settings for Obsidian Asana Mirror"}),new e.Setting(t).setName("Asana API Key").setDesc("Enter your Asana API key.").addText((e=>e.setPlaceholder("Enter your API key").setValue(this.plugin.settings.apiKey||"").onChange((async e=>{this.plugin.settings.apiKey=e,await this.plugin.saveSettings()})))),new e.Setting(t).setName("Asana workspace ID").setDesc("Enter your Asana workspace ID.").addText((e=>e.setPlaceholder("Enter your workspace ID").setValue(this.plugin.settings.workspaceId||"").onChange((async e=>{this.plugin.settings.workspaceId=e,await this.plugin.saveSettings()})))),new e.Setting(t).setName("Asana assignee ID").setDesc("Enter the assignee ID.").addText((e=>e.setPlaceholder("Enter the assignee ID").setValue(this.plugin.settings.assigneeId||"").onChange((async e=>{this.plugin.settings.assigneeId=e,await this.plugin.saveSettings()})))),new e.Setting(t).setName("Asana user section to exclude").setDesc("Enter the comma-separated user section IDs to exclude (optional).").addText((e=>e.setPlaceholder("Enter the user section IDs to exclude").setValue(this.plugin.settings.userSectionsToExclude||"").onChange((async e=>{this.plugin.settings.userSectionsToExclude=e,await this.plugin.saveSettings()})))),new e.Setting(t).setName("Asana project IDs to exclude").setDesc("Enter the comma-separated project IDs to exclude (optional).").addText((e=>e.setPlaceholder("Enter the project IDs to exclude").setValue(this.plugin.settings.projectIdsToExclude||"").onChange((async e=>{this.plugin.settings.projectIdsToExclude=e,await this.plugin.saveSettings()})))),new e.Setting(t).setName("Task template").setDesc("Enter the task template. You can use the following placeholders: {{task_name}}, {{project_id}}, {{task_id}}, {{project_name}}, {{due_date}}, {{completed}}, {{notes}}, {{assignee_section_id}}.").addTextArea((e=>e.setPlaceholder("Enter the task template").setValue(this.plugin.settings.taskTemplate||"").onChange((async e=>{this.plugin.settings.taskTemplate=e,await this.plugin.saveSettings()}))))}}const s={apiKey:"",workspaceId:""};class a extends e.Plugin{async onload(){console.log("Loading Obsidian Asana Mirror plugin"),await this.loadSettings(),this.addSettingTab(new t(this.app,this)),this.addCommand({id:"sync-asana-tasks",name:"Sync Asana Tasks",callback:()=>this.syncTasks()}),this.intervalId=setInterval((()=>this.syncTasks()),36e5)}async onunload(){console.log("Unloading Obsidian Asana Mirror plugin"),this.intervalId&&clearInterval(this.intervalId)}async syncTasks(){console.log("Syncing Asana tasks...");const e=await this.fetchAsanaTasks();await this.updateObsidianNote(e)}async fetchAsanaTasks(){if(!this.settings.apiKey)return console.error("Asana API key is not set."),[];const e=`https://app.asana.com/api/1.0/tasks${this.settings.workspaceId?`?workspace=${this.settings.workspaceId}`:""}${this.settings.assigneeId?`&assignee=${this.settings.assigneeId}`:""}${this.settings.userSectionToExclude?`&assignee_section.ne=${this.settings.userSectionToExclude}`:""}&limit=100&opt_fields=name,completed,due_on,start_on,projects,projects.name,notes,uri,assignee_section,projects.gid,gid&completed_since=${(new Date).toISOString()}`,t=await fetch(e,{headers:{Authorization:`Bearer ${this.settings.apiKey}`}});return(await t.json()).data}async updateObsidianNote(e){const t=await this.app.vault.getAbstractFileByPath("Asana Tasks.md");if(t?await this.app.vault.read(t):await this.app.vault.create("Asana Tasks.md",""),this.settings.userSectionsToExclude){let t=this.settings.userSectionsToExclude.split(",");t=t.map((e=>e.trim())),e=e.filter((e=>!t.includes(e.assignee_section.gid)))}if(e=e.filter((e=>!e.start_on||new Date(e.start_on)<=new Date)),this.settings.projectIdsToExclude){let t=this.settings.projectIdsToExclude.split(",");t=t.map((e=>e.trim())),e=e.filter((e=>!e.projects.some((e=>t.includes(e.gid)))))}let s=this.settings.taskTemplate,a=e.map((function(e){let t=s.replace("{{assignee_section_id}}",e.assignee_section).replace("{{completed}}",e.completed).replace("{{due_date}}",e.due_on).replace("{{notes}}",e.notes).replace("{{task_id}}",e.gid).replace("{{task_name}}",e.name);return e.projects&&e.projects.length>0?(t=t.replace("{{project_id}}",e.projects[0].gid),t=t.replace("{{project_name}}",e.projects[0].name)):(t=t.replace("{{project_id}}","0"),t=t.replace("{{project_name}}","")),t})).join("\n");await this.app.vault.modify(t,a)}async loadSettings(){this.settings=Object.assign({},s,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}}module.exports=a;
